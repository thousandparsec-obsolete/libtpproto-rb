<?xml version="1.0"?>
<!DOCTYPE protocol SYSTEM "http://www.thousandparsec.net/tp/xml/protocol.dtd">
<protocol version="TP03">
	<packet name="Header">
		<direction>any</direction>
		<structure>
			<character size="4">
				<name>version</name>
				<longname>Packet Version</longname>
				<description>Always has value "TP02" ("TP" plus version number), no null terminator.</description>
				<example>TP03</example>
			</character>
			<integer type="unsigned" size="32">
				<name>sequence</name>
				<longname>Sequence Number</longname>
				<description>An incrementing number "sequence number". The sequence number should always be one more then the previous frames sequence number.</description>
				<example>2345</example>
			</integer>
			<integer type="unsigned" size="32">
				<name>type</name>
				<longname>Type</longname>
				<description>Type of packet</description>
				<example>2</example>
			</integer>
			<integer type="unsigned" size="32">
				<name>length</name>
				<longname>Length</longname>
				<description>Length of the packet</description>
				<example>32</example>
			</integer>
		</structure>
	</packet>
	<packet base="Header" name="Request"></packet>
	<packet base="Header" name="Response"></packet>

	<packet base="Response" name="Okay" code="0">
		<description>A request was successful in some sort of way.</description>
		<structure>
			<string>
				<name>result</name>
				<longname>Result</longname>
				<description>The string can be safely ignored (However it may contain useful information for debugging purposes).</description>
				<example>Order was created successfully in slot 1.</example>
			</string>
		</structure>
	</packet>
	<packet base="Response" name="Fail" code="1">
		<description>A request has failed in some sort of way.</description>
		<structure>
			<enumeration type="unsigned" size="32">
				<name>code</name>
				<longname>Error Code</longname>
				<description>Text message of the error.</description>
				<values>
					<value id="0" name="Protocol">Protocol Error, Something went wrong with the protocol</value>
					<value id="1" name="Frame">Frame Error, One of the frames sent was bad or corrupted</value>
					<value id="2" name="UnavailablePermanently">Unavailable Permanently, This operation is unavailable</value>
					<value id="3" name="UnavailableTemporarily">Unavailable Temporarily, This operation is unavailable at this moment</value>
					<value id="4" name="NoSuchThing">No Such Thing, The object/order/message does not exist</value>
					<value id="5" name="PermissionDenied">Permission Denied, You don't have permission to do this operation</value>
				</values>
			</enumeration>
			<string>
				<name>result</name>
				<longname>Result</longname>
				<description>Text message of the error.</description>
				<example>Order was created successfully in slot 1.</example>
			</string>
		</structure>
		<note>If the connect frame is not valid TP frame, this frame will not be returned, instead a plain text string will be sent saying that the wrong protocol has been used. A fail frame may be send if the wrong protocol version is detected. This does not affect clients as they should always get the connect frame right.</note>
	</packet>
	<packet base="Response" name="Sequence">
		<description>Frame which says that there are multiple frames coming in response to the request.</description>
		<structure>
			<string>
				<name>number</name>
				<longname>Number of Frames</longname>
				<description>Number of frames which will follow this one.</description>
				<example>34</example>
			</string>
		</structure>
	</packet>

	<packet base="Request" name="GetWithID">
		<longname>Get (something) using IDs</longname>
		<description>This packet is used to get things using their IDs. Such things would be objects, message boards, etc.</description>
		<structure>
			<list>
				<name>ids</name>
				<longname>IDs</longname>
				<description>The IDs to get.</description>
				<example>10, 5, 6</example>
				<structure>
					<integer type="unsigned" size="32">
						<name>id</name>
						<longname>ID</longname>
					</integer>
				</structure>
			</list>
		</structure>
	</packet>
	<packet base="Request" name="GetWithIDSlot">
		<longname>Get (something) using ID and slot</longname>
		<description>This packet is used to get things which are in "slots" on a parent. Examples would be orders (on objects), messages (on boards), etc.</description>
		<structure>
			<integer type="unsigned" size="32">
				<name>id</name>
				<longname>ID</longname>
				<description>ID of the base thing.</description>
				<example>2345</example>
			</integer>
			<list>
				<name>slots</name>
				<longname>Slots</longname>
				<description>The slots on the thing to get.</description>
				<example>10, 5, 6</example>
				<structure>
					<integer type="unsigned" size="32">
						<name>slot</name>
						<longname>Slot</longname>
					</integer>
				</structure>
				<note>An empty list is equivalent to requesting all slots.</note>
			</list>
		</structure>
		<note>If this is really a Remove frame then slot numbers should be in decrementing value if you don't want strange things to happen. (IE 10, 4, 1)</note>
	</packet>


<packet base="Request" name="Connect" code="3">
	<longname>Connect</longname>
	<structure>
		<string>
			<name>string</name>
			<longname>Client Identification String</longname>
			<description>
				The client identification string can be any string but will mostly
				used to produce stats of who uses which client. The server may return 
				either a OK, Fail or Redirect frame.
			</description>
		</string>
	</structure>
	<note>
			If the server wants to return a Redirect and the client only supports
			the old protocol a Fail should be returned instead.
	</note>
</packet>
<packet base="Request" name="Login" code="4">
	<longname>Login</longname>
	<structure>
		<string>
			<name>username</name>
			<longname>Username</longname>
			<description>The username to login with.</description>
		</string>
		<string>
			<name>password</name>
			<longname>Password</longname>
			<description>The password for the username.</description>
		</string>
	</structure>
	<note>
		Currently the password will be transmitted in plain text. 
		To avoid interception SSL service should be used. Some
		servers may refuse to authenticate on the unencrypted service and only
	</note>
</packet>
</protocol>
